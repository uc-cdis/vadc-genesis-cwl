apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: gwas-template-integration-test-uniflow-input
spec:
  entrypoint: gwas-workflow
  templates:
    - name: gwas-workflow
      inputs:
        parameters:
          - name: internal_api_env
          - name: source_id
            value: 2
          - name: hare_concept_id
            default: 2000007027
          - name: hare_population
          - name: n_pcs
            default: 0
            value: 3
          - name: variables
          - name: out_prefix
            value: vadc_genesis
          - name: outcome

      dag:
        tasks:
          - name: extract-raw-json
            template: get-raw-variable-json
            arguments:
              parameters:
                - name: variables
                  value: "{{inputs.parameters.variables}}"
          - name: process-inputs
            template: process-input-variables
            dependencies: [extract-raw-json]
            arguments:
              parameters:
                - name: hare_concept_id
                  value: "{{inputs.parameters.hare_concept_id}}"
                - name: outcome
                  value: "{{inputs.parameters.outcome}}"
              artifacts:
                - name: raw_variables_json
                  from: '{{tasks.extract-raw-json.outputs.artifacts.raw_variables_json}}'
          - name: run-tar
            template: run-tar
            dependencies: [process-inputs]
            arguments:
              parameters:
                - name: out_prefix
                  value: "{{inputs.parameters.out_prefix}}"
              artifacts:
                - name: variables_with_hare_json
                  from: '{{tasks.process-inputs.outputs.artifacts.variables_with_hare_json}}'
                - name: other_variable_data_json
                  from: '{{tasks.process-inputs.outputs.artifacts.other_variable_data_json}}'
          - name: create-indexd-record
            template: create-indexd-record
            dependencies: [run-tar]
            arguments:
              parameters:
                - name: arborist_resource
                  value: "/programs/DEV/projects/test"
                - name: internal_api_env
                  value: "{{inputs.parameters.internal_api_env}}"
              artifacts:
                - name: gwas_archive
                  from: "{{tasks.run-tar.outputs.artifacts.gwas_archive}}"

    - name: get-raw-variable-json
      inputs:
        parameters:
          - name: variables
      script:
        image: quay.io/cdis/alpine-jq:latest
        command: [sh]
        source: |
          echo '{{inputs.parameters.variables}}' | jq -r . > /mnt/vol/raw_variables.json
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
      outputs:
        artifacts:
          - name: raw_variables_json
            path: /mnt/vol/raw_variables.json
            archive:
              none: {}
            s3:
              key: "{{workflow.name}}/{{workflow.name}}.raw_variables.json"

    - name: process-input-variables
      inputs:
        parameters:
          - name: hare_concept_id
          - name: outcome
        artifacts:
          - name: raw_variables_json
            path: /mnt/vol/raw_variables.json
      container:
        image: quay.io/cdis/vadc-gwas-tools:feat_VADC-161-process-input-json
        imagePullPolicy: Always
        command: ["/bin/bash", "-c"]
        args: ["/env/bin/vadc-gwas-tools ProcessInputVariables \
                --raw_variables_json {{inputs.artifacts.raw_variables_json.path}} \
                --hare_concept_id {{inputs.parameters.hare_concept_id}} \
                --outcome '{{inputs.parameters.outcome}}' \
                --output_variable_json /mnt/vol/variables_with_hare.json \
                --output_other_json /mnt/vol/other_variable_data.json"]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
      outputs:
        parameters:
          - name: other_variable_data
            valueFrom:
                path: /mnt/vol/other_variable_data.json
        artifacts:
          - name: variables_with_hare_json
            path: /mnt/vol/variables_with_hare.json
            archive:
              none: {}
            s3:
              key: "{{workflow.name}}/{{workflow.name}}.variables_with_hare.json"
          - name: other_variable_data_json
            path: /mnt/vol/other_variable_data.json
            archive:
              none: {}
            s3:
              key: "{{workflow.name}}/{{workflow.name}}.other_variable_data.json"

    - name: run-tar
      inputs:
        parameters: 
          - name: out_prefix
        artifacts:
          - name: variables_with_hare_json
            path: "/mnt/vol/{{workflow.name}}/{{workflow.name}}.variables_with_hare.json"
          - name: other_variable_data_json
            path: "/mnt/vol/{{workflow.name}}/{{workflow.name}}.other_variable_data.json"
      retryStrategy:
        limit: "3"
        retryPolicy: "Always"
      script:
        image: quay.io/cdis/alpine-jq:latest
        imagePullPolicy: IfNotPresent
        command: [/bin/sh]
        source: |
          cd /mnt/vol
          tar -czf {{workflow.name}}.tar.gz {{workflow.name}}/
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        resources:
          requests:
            cpu: 250m
            memory: 500Mi
          limits:
            cpu: 500m
            memory: 1Gi
      outputs:
        artifacts:
          - name: gwas_archive
            path: "/mnt/vol/{{workflow.name}}.tar.gz"
            archive:
              none: {}
            s3: 
              endpoint: s3.amazonaws.com
              bucket: second-argo-bucket
              key: "{{workflow.name}}/{{workflow.name}}.tar.gz"
              accessKeySecret:
                name: argo-s3-creds
                key: AccessKeyId
              secretKeySecret:
                name: argo-s3-creds
                key: SecretAccessKey

    - name: create-indexd-record
      inputs:
          parameters:
            - name: arborist_resource
            - name: internal_api_env
          artifacts:
            - name: gwas_archive
              path: "/mnt/vol/{{workflow.name}}.tar.gz"
      container:
        image: quay.io/cdis/vadc-gwas-tools:feat_VADC-161-process-input-json
        imagePullPolicy: Always
        command: ["/bin/bash", "-c"]
        args: ["/env/bin/vadc-gwas-tools CreateIndexdRecord \
                --gwas_archive {{inputs.artifacts.gwas_archive.path}} \
                --s3_uri s3://second-argo-bucket/{{workflow.name}}/{{workflow.name}}.tar.gz \
                --arborist_resource {{inputs.parameters.arborist_resource}} \
                -o /mnt/vol/did.json"]
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
        env:
          - name: GEN3_ENVIRONMENT
            value: "{{inputs.parameters.internal_api_env}}"
          - name: INDEXDUSER
            valueFrom:
              secretKeyRef:
                name: indexd-creds
                key: user
          - name: INDEXDPASS
            valueFrom:
              secretKeyRef:
                name: indexd-creds
                key: password
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 100Mi
      outputs:
        parameters:
          - name: gwas_archive_index
            valueFrom:
              path: /mnt/vol/did.json
            globalName: gwas_archive_index      
